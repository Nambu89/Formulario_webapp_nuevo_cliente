{"ast":null,"code":"// src/services/api.js\nimport axiosInstance from '../utils/axiosConfig';\n// Funciñon de login del usuario\nconst clienteAPI = {\n  login: async (email, password) => {\n    const formData = new URLSearchParams();\n    formData.append('username', email);\n    formData.append('password', password);\n    const response = await axiosInstance.post('/token', formData, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    });\n    return response.data; // Devuelve un .data ya que usamos axios\n  },\n  crearSolicitud: data => axiosInstance.post('/api/solicitudes/', data),\n  obtenerSolicitudesPendientes: rol => axiosInstance.get(`/api/solicitudes/pendientes/${rol}`),\n  obtenerResumenSolicitudes: () => axiosInstance.get('/api/solicitudes/resumen'),\n  obtenerSolicitudesUsuario: email => axiosInstance.get(`/api/solicitudes/usuario/${email}`),\n  aprobarRechazarSolicitud: (solicitudId, data) => axiosInstance.put(`/api/solicitudes/${solicitudId}/aprobar`, data),\n  uploadDocumento: file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    return axiosInstance.post('/api/upload/documento', formData);\n  },\n  // Nuevas solicitudes para gestionar usuarios\n  getAllUsers: () => axiosInstance.get('/users'),\n  createUser: data => axiosInstance.post('/users', data),\n  updateUser: (userId, data) => axiosInstance.put(`/users/${userId}`, data),\n  deleteUser: userId => axiosInstance.delete(`/users/${userId}`),\n  // Solicitudes para el perfil del usuario\n  getUserProfile: () => axiosInstance.get('/users/me'),\n  updateUserProfile: data => axiosInstance.put('/users/me', data),\n  changePassword: data => axiosInstance.post('/users/me/change-password', data)\n};\nexport { clienteAPI };","map":{"version":3,"names":["axiosInstance","clienteAPI","login","email","password","formData","URLSearchParams","append","response","post","headers","data","crearSolicitud","obtenerSolicitudesPendientes","rol","get","obtenerResumenSolicitudes","obtenerSolicitudesUsuario","aprobarRechazarSolicitud","solicitudId","put","uploadDocumento","file","FormData","getAllUsers","createUser","updateUser","userId","deleteUser","delete","getUserProfile","updateUserProfile","changePassword"],"sources":["C:/Users/Fernando Prada/OneDrive - SVAN TRADING SL/Documentos/Proyectos/Registro nuevos clientes/Frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\nimport axiosInstance from '../utils/axiosConfig';\r\n// Funciñon de login del usuario\r\nconst clienteAPI = {\r\n    login: async (email, password) => {\r\n        const formData = new URLSearchParams();\r\n        formData.append('username', email);\r\n        formData.append('password', password);\r\n\r\n        const response = await axiosInstance.post('/token', formData, {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n            }\r\n        });\r\n        return response.data; // Devuelve un .data ya que usamos axios\r\n    },\r\n    \r\n    crearSolicitud: (data) => axiosInstance.post('/api/solicitudes/', data),\r\n    obtenerSolicitudesPendientes: (rol) => axiosInstance.get(`/api/solicitudes/pendientes/${rol}`),\r\n    obtenerResumenSolicitudes: () => axiosInstance.get('/api/solicitudes/resumen'),\r\n    obtenerSolicitudesUsuario: (email) => axiosInstance.get(`/api/solicitudes/usuario/${email}`),\r\n    aprobarRechazarSolicitud: (solicitudId, data) => axiosInstance.put(`/api/solicitudes/${solicitudId}/aprobar`, data),\r\n    uploadDocumento: (file) => {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        return axiosInstance.post('/api/upload/documento', formData);\r\n    },\r\n    // Nuevas solicitudes para gestionar usuarios\r\n    getAllUsers: () => axiosInstance.get('/users'),\r\n    createUser: (data) => axiosInstance.post('/users', data),\r\n    updateUser: (userId, data) => axiosInstance.put(`/users/${userId}`, data),\r\n    deleteUser: (userId) => axiosInstance.delete(`/users/${userId}`),\r\n    // Solicitudes para el perfil del usuario\r\n    getUserProfile: () => axiosInstance.get('/users/me'),\r\n    updateUserProfile: (data) => axiosInstance.put('/users/me', data),\r\n    changePassword: (data) => axiosInstance.post('/users/me/change-password', data),\r\n};\r\n\r\nexport { clienteAPI };"],"mappings":"AAAA;AACA,OAAOA,aAAa,MAAM,sBAAsB;AAChD;AACA,MAAMC,UAAU,GAAG;EACfC,KAAK,EAAE,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAC9B,MAAMC,QAAQ,GAAG,IAAIC,eAAe,CAAC,CAAC;IACtCD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEJ,KAAK,CAAC;IAClCE,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,QAAQ,CAAC;IAErC,MAAMI,QAAQ,GAAG,MAAMR,aAAa,CAACS,IAAI,CAAC,QAAQ,EAAEJ,QAAQ,EAAE;MAC1DK,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAC1B,CAAC;EAEDC,cAAc,EAAGD,IAAI,IAAKX,aAAa,CAACS,IAAI,CAAC,mBAAmB,EAAEE,IAAI,CAAC;EACvEE,4BAA4B,EAAGC,GAAG,IAAKd,aAAa,CAACe,GAAG,CAAC,+BAA+BD,GAAG,EAAE,CAAC;EAC9FE,yBAAyB,EAAEA,CAAA,KAAMhB,aAAa,CAACe,GAAG,CAAC,0BAA0B,CAAC;EAC9EE,yBAAyB,EAAGd,KAAK,IAAKH,aAAa,CAACe,GAAG,CAAC,4BAA4BZ,KAAK,EAAE,CAAC;EAC5Fe,wBAAwB,EAAEA,CAACC,WAAW,EAAER,IAAI,KAAKX,aAAa,CAACoB,GAAG,CAAC,oBAAoBD,WAAW,UAAU,EAAER,IAAI,CAAC;EACnHU,eAAe,EAAGC,IAAI,IAAK;IACvB,MAAMjB,QAAQ,GAAG,IAAIkB,QAAQ,CAAC,CAAC;IAC/BlB,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEe,IAAI,CAAC;IAC7B,OAAOtB,aAAa,CAACS,IAAI,CAAC,uBAAuB,EAAEJ,QAAQ,CAAC;EAChE,CAAC;EACD;EACAmB,WAAW,EAAEA,CAAA,KAAMxB,aAAa,CAACe,GAAG,CAAC,QAAQ,CAAC;EAC9CU,UAAU,EAAGd,IAAI,IAAKX,aAAa,CAACS,IAAI,CAAC,QAAQ,EAAEE,IAAI,CAAC;EACxDe,UAAU,EAAEA,CAACC,MAAM,EAAEhB,IAAI,KAAKX,aAAa,CAACoB,GAAG,CAAC,UAAUO,MAAM,EAAE,EAAEhB,IAAI,CAAC;EACzEiB,UAAU,EAAGD,MAAM,IAAK3B,aAAa,CAAC6B,MAAM,CAAC,UAAUF,MAAM,EAAE,CAAC;EAChE;EACAG,cAAc,EAAEA,CAAA,KAAM9B,aAAa,CAACe,GAAG,CAAC,WAAW,CAAC;EACpDgB,iBAAiB,EAAGpB,IAAI,IAAKX,aAAa,CAACoB,GAAG,CAAC,WAAW,EAAET,IAAI,CAAC;EACjEqB,cAAc,EAAGrB,IAAI,IAAKX,aAAa,CAACS,IAAI,CAAC,2BAA2B,EAAEE,IAAI;AAClF,CAAC;AAED,SAASV,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}