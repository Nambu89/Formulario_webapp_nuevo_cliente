{"ast":null,"code":"import axios from 'axios';\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:8000',\n  // No establecer el Content-Type por defecto, dejarlo a Axios\n  withCredentials: false // Mantenemos en false para evitar problemas CORS\n});\n\n// Añadir interceptor para incluir el token en las peticiones\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n\n  // Importante: No sobreescribir el Content-Type si es FormData\n  if (config.data instanceof FormData) {\n    // Eliminar el Content-Type para que Axios lo establezca con el boundary correcto\n    delete config.headers['Content-Type'];\n  }\n  return config;\n}, error => {\n  console.error('Error en la configuración de la petición:', error);\n  return Promise.reject(error);\n});\n\n// Mejorar el interceptor de respuesta para más detalle en los errores\naxiosInstance.interceptors.response.use(response => response, error => {\n  // Información detallada del error para depuración\n  if (error.response) {\n    console.error('Datos del error:', error.response.data);\n    console.error('Estado:', error.response.status);\n    console.error('Cabeceras:', error.response.headers);\n\n    // Sesión expirada o token inválido\n    if (error.response.status === 401) {\n      console.warn('Sesión expirada o no autorizado');\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n\n      // Solo redirigir si no estamos ya en login\n      if (window.location.pathname !== '/login') {\n        window.location.href = '/login';\n      }\n    }\n  } else if (error.request) {\n    // La petición fue hecha pero no se recibió respuesta\n    console.error('No se recibió respuesta del servidor:', error.request);\n  } else {\n    // Error al configurar la petición\n    console.error('Error al configurar la petición:', error.message);\n  }\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","withCredentials","interceptors","request","use","config","token","localStorage","getItem","headers","data","FormData","error","console","Promise","reject","response","status","warn","removeItem","window","location","pathname","href","message"],"sources":["C:/Users/Fernando Prada/OneDrive - SVAN TRADING SL/Documentos/Proyectos/Registro nuevos clientes/Frontend/src/utils/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'http://localhost:8000',\r\n    // No establecer el Content-Type por defecto, dejarlo a Axios\r\n    withCredentials: false // Mantenemos en false para evitar problemas CORS\r\n});\r\n\r\n// Añadir interceptor para incluir el token en las peticiones\r\naxiosInstance.interceptors.request.use(\r\n    config => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            config.headers['Authorization'] = `Bearer ${token}`;\r\n        }\r\n        \r\n        // Importante: No sobreescribir el Content-Type si es FormData\r\n        if (config.data instanceof FormData) {\r\n            // Eliminar el Content-Type para que Axios lo establezca con el boundary correcto\r\n            delete config.headers['Content-Type'];\r\n        }\r\n        \r\n        return config;\r\n    },\r\n    error => {\r\n        console.error('Error en la configuración de la petición:', error);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Mejorar el interceptor de respuesta para más detalle en los errores\r\naxiosInstance.interceptors.response.use(\r\n    response => response,\r\n    error => {\r\n        // Información detallada del error para depuración\r\n        if (error.response) {\r\n            console.error('Datos del error:', error.response.data);\r\n            console.error('Estado:', error.response.status);\r\n            console.error('Cabeceras:', error.response.headers);\r\n            \r\n            // Sesión expirada o token inválido\r\n            if (error.response.status === 401) {\r\n                console.warn('Sesión expirada o no autorizado');\r\n                localStorage.removeItem('token');\r\n                localStorage.removeItem('user');\r\n                \r\n                // Solo redirigir si no estamos ya en login\r\n                if (window.location.pathname !== '/login') {\r\n                    window.location.href = '/login';\r\n                }\r\n            }\r\n        } else if (error.request) {\r\n            // La petición fue hecha pero no se recibió respuesta\r\n            console.error('No se recibió respuesta del servidor:', error.request);\r\n        } else {\r\n            // Error al configurar la petición\r\n            console.error('Error al configurar la petición:', error.message);\r\n        }\r\n        \r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default axiosInstance;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC/BC,OAAO,EAAE,uBAAuB;EAChC;EACAC,eAAe,EAAE,KAAK,CAAC;AAC3B,CAAC,CAAC;;AAEF;AACAH,aAAa,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAClCC,MAAM,IAAI;EACN,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACvD;;EAEA;EACA,IAAID,MAAM,CAACK,IAAI,YAAYC,QAAQ,EAAE;IACjC;IACA,OAAON,MAAM,CAACI,OAAO,CAAC,cAAc,CAAC;EACzC;EAEA,OAAOJ,MAAM;AACjB,CAAC,EACDO,KAAK,IAAI;EACLC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;EACjE,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACAd,aAAa,CAACI,YAAY,CAACc,QAAQ,CAACZ,GAAG,CACnCY,QAAQ,IAAIA,QAAQ,EACpBJ,KAAK,IAAI;EACL;EACA,IAAIA,KAAK,CAACI,QAAQ,EAAE;IAChBH,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAACI,QAAQ,CAACN,IAAI,CAAC;IACtDG,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAACI,QAAQ,CAACC,MAAM,CAAC;IAC/CJ,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACI,QAAQ,CAACP,OAAO,CAAC;;IAEnD;IACA,IAAIG,KAAK,CAACI,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MAC/BJ,OAAO,CAACK,IAAI,CAAC,iCAAiC,CAAC;MAC/CX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;MAChCZ,YAAY,CAACY,UAAU,CAAC,MAAM,CAAC;;MAE/B;MACA,IAAIC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,QAAQ,EAAE;QACvCF,MAAM,CAACC,QAAQ,CAACE,IAAI,GAAG,QAAQ;MACnC;IACJ;EACJ,CAAC,MAAM,IAAIX,KAAK,CAACT,OAAO,EAAE;IACtB;IACAU,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAACT,OAAO,CAAC;EACzE,CAAC,MAAM;IACH;IACAU,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAACY,OAAO,CAAC;EACpE;EAEA,OAAOV,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAed,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}